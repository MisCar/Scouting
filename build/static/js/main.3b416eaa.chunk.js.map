{"version":3,"sources":["components/Card.tsx","utilities/hooks.ts","utilities/language.ts","components/inputs/Boolean.tsx","components/inputs/Counter.tsx","components/inputs/Timer.tsx","components/inputs/Text.tsx","components/inputs/KeyText.tsx","components/CardWidgets.tsx","components/GameCard.tsx","utilities/constants.ts","utilities/firebase.ts","components/games/Simon.tsx","components/InfoCard.tsx","components/SubmissionCard.tsx","components/Form.tsx","components/games/Leaderboards.tsx","components/games/SnakeGame.ts","components/games/Snake.tsx","components/ProfilePicture.tsx","components/TopBar.tsx","App.tsx","index.tsx"],"names":["Card","title","children","className","dir","useLocalStorage","key","initialValue","readValue","window","item","localStorage","getItem","setItem","JSON","stringify","parse","error","console","warn","useState","storedValue","setStoredValue","useEffect","handleStorageChange","addEventListener","removeEventListener","value","newValue","Function","dispatchEvent","Event","expressions","info","en","he","update","eventCode","gameNumber","teamNumber","fetchTeamsFromTBA","submission","submit","reset","copy","games","yes","no","maybe","missing","leaderboards","in","flags","languages","getExpression","language","defaultLanguage","process","LanguageContext","React","createContext","Boolean","store","setValue","useContext","onClick","Counter","min","max","onDoubleClick","Timer","interval","setInterval","start","Date","now","initial","clearInterval","x","result","toFixed","format","Text","type","placeholder","onChange","e","target","KeyText","CardWidgets","widgets","prefix","map","element","label","widget","GameCard","history","useHistory","push","QUARTERFINALS_ORDER","SEMIFINALS_ORDER","FINALS_ORDER","VERSION","firebase","apps","length","app","initializeApp","apiKey","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","Colors","InfoCard","setSchema","game","setGame","team","setTeam","event","setEvent","level","setLevel","teams","setTeams","fetchTeams","a","code","Number","replaceAll","axios","get","headers","REACT_APP_TBA_AUTH_KEY","response","data","alliances","red","team_keys","substring","blue","alert","auth","currentUser","firestore","doc","then","undefined","caches","open","cache","keys","forEach","delete","toString","s","getMissing","schema","sections","card","SubmissionCard","setMissing","createSubmission","General","Game","Level","Team","Scouter","displayName","collection","where","empty","add","catch","docs","ref","set","removeItem","navigator","clipboard","writeText","Form","Leaderboards","snake","setSnake","orderBy","newSnake","userScores","id","Piece","Direction","Simon","selected","setSelected","sequence","setSequence","index","setIndex","score","setScore","showSequence","color","Promise","resolve","setTimeout","expandSequence","colorIndex","Math","floor","random","newColor","Blue","Green","Red","Yellow","onButtonClick","i","getButton","classes","INITIAL_BOARD","Body","Head","Background","Food","getInitialBoard","SnakeGame","board","food","direction","size","setBoard","this","Right","row","j","head","next","position","Up","Left","Down","moveInDirection","finish","moveFoodToNewRandomLocation","slice","getBoard","run","move","setCallbacks","high","document","merge","Snake","setDirection","rotation","attemptToSetDirection","d","r","piece","c","src","alt","height","width","style","transform","ProfilePicture","photoURL","confirm","signOut","TopBar","setLanguage","setRotation","to","indexOf","App","user","setUser","onAuthStateChanged","checkVersion","toISOString","latest","version","_","last","getSeconds","Provider","provider","GoogleAuthProvider","signInWithPopup","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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iC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,YAEV,CACIjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,YAEV,CACIjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,YAEV,CACIjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,YAEV,CACIjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,YAEV,CACIjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,YAEV,CACIjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,YAEV,CACIjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,YAEV,CACIjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EAAMiC,WACNjC,EA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","file":"static/js/main.3b416eaa.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\ninterface Props {\r\n    title: string\r\n}\r\n\r\nconst Card: React.FC<React.PropsWithChildren<Props>> = ({\r\n    title,\r\n    children,\r\n}: React.PropsWithChildren<Props>) => {\r\n    return (\r\n        <div\r\n            className=\"container m-3 bg-gray-100 dark:bg-gray-700 rounded-2xl\"\r\n            dir=\"auto\"\r\n        >\r\n            <div className=\"w-full bg-gray-200 dark:bg-gray-900 p-3 rounded-t-2xl shadow-xl\">\r\n                <h2 className=\"font-black text-2xl\">{title}</h2>\r\n            </div>\r\n            <div className=\"p-3\">{children}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","/*\r\n The following code is available from https://usehooks-typescript.com\r\n\r\n The MIT License (MIT)\r\n\r\n Copyright (c) 2020 Julien CARON\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights\r\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n copies of the Software, and to permit persons to whom the Software is\r\n furnished to do so, subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in all\r\n copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n SOFTWARE.\r\n */\r\n\r\nimport { useEffect, useState } from \"react\"\r\n\r\nexport function useLocalStorage<T>(\r\n    key: string,\r\n    initialValue: T\r\n): [T, (value: T) => void] {\r\n    // Get from local storage then\r\n    // parse stored json or return initialValue\r\n    const readValue = () => {\r\n        // Prevent build error \"window is undefined\" but keep keep working\r\n        if (typeof window === \"undefined\") {\r\n            return initialValue\r\n        }\r\n\r\n        try {\r\n            const item = window.localStorage.getItem(key)\r\n            if (item === null) {\r\n                window.localStorage.setItem(key, JSON.stringify(initialValue))\r\n            }\r\n            return item ? JSON.parse(item) : initialValue\r\n        } catch (error) {\r\n            console.warn(`Error reading localStorage key “${key}”:`, error)\r\n            return initialValue\r\n        }\r\n    }\r\n\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState<T>(readValue)\r\n\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = (value: T) => {\r\n        // Prevent build error \"window is undefined\" but keeps working\r\n        if (typeof window == \"undefined\") {\r\n            console.warn(\r\n                `Tried setting localStorage key “${key}” even though environment is not a client`\r\n            )\r\n        }\r\n\r\n        try {\r\n            // Allow value to be a function so we have the same API as useState\r\n            const newValue =\r\n                value instanceof Function ? value(storedValue) : value\r\n\r\n            // Save to local storage\r\n            window.localStorage.setItem(key, JSON.stringify(newValue))\r\n\r\n            // Save state\r\n            setStoredValue(newValue)\r\n\r\n            // We dispatch a custom event so every useLocalStorage hook are notified\r\n            window.dispatchEvent(new Event(\"local-storage\"))\r\n        } catch (error) {\r\n            console.warn(`Error setting localStorage key “${key}”:`, error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setStoredValue(readValue())\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const handleStorageChange = () => {\r\n            setStoredValue(readValue())\r\n        }\r\n\r\n        // this only works for other documents, not the current one\r\n        window.addEventListener(\"storage\", handleStorageChange)\r\n\r\n        // this is a custom event, triggered in writeValueToLocalStorage\r\n        window.addEventListener(\"local-storage\", handleStorageChange)\r\n\r\n        return () => {\r\n            window.removeEventListener(\"storage\", handleStorageChange)\r\n            window.removeEventListener(\"local-storage\", handleStorageChange)\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    if (window.localStorage.getItem(key) === null)\r\n        window.localStorage.setItem(key, JSON.stringify(initialValue))\r\n\r\n    return [storedValue, setValue]\r\n}\r\n","import React from \"react\"\r\n\r\ninterface Expression {\r\n    en: string\r\n    he: string\r\n}\r\n\r\nexport type Language = keyof Expression\r\n\r\nconst expressions: { [key: string]: Expression } = {\r\n    info: {\r\n        en: \"Info\",\r\n        he: \"מידע\",\r\n    },\r\n    update: {\r\n        en: \"Update\",\r\n        he: \"עדכון\",\r\n    },\r\n    eventCode: {\r\n        en: \"Event Code\",\r\n        he: \"קוד אירוע\",\r\n    },\r\n    gameNumber: {\r\n        en: \"Game Number\",\r\n        he: \"מספר משחק\",\r\n    },\r\n    teamNumber: {\r\n        en: \"Team Number\",\r\n        he: \"מספר קבוצה\",\r\n    },\r\n    fetchTeamsFromTBA: {\r\n        en: \"Fetch Teams from TBA\",\r\n        he: \"איסוף קבוצות מ-TBA\",\r\n    },\r\n    submission: {\r\n        en: \"Submission\",\r\n        he: \"הגשה\",\r\n    },\r\n    submit: {\r\n        en: \"Submit\",\r\n        he: \"שליחה\",\r\n    },\r\n    reset: {\r\n        en: \"Reset\",\r\n        he: \"איפוס\",\r\n    },\r\n    copy: {\r\n        en: \"Copy\",\r\n        he: \"העתקה\",\r\n    },\r\n    games: {\r\n        en: \"Games\",\r\n        he: \"משחקים\",\r\n    },\r\n    yes: {\r\n        en: \"Yes\",\r\n        he: \"כן\",\r\n    },\r\n    no: {\r\n        en: \"No\",\r\n        he: \"לא\",\r\n    },\r\n    maybe: {\r\n        en: \"Maybe\",\r\n        he: \"אולי\",\r\n    },\r\n    missing: {\r\n        en: \"Missing\",\r\n        he: \"חסר\",\r\n    },\r\n    leaderboards: {\r\n        en: \"Leaderboards\",\r\n        he: \"שיאים\",\r\n    },\r\n    in: {\r\n        en: \"in \",\r\n        he: \"ב\",\r\n    },\r\n}\r\n\r\nexport const flags = {\r\n    en: \"🇺🇸\",\r\n    he: \"🇮🇱\",\r\n}\r\n\r\nexport const languages: Language[] = [\"en\", \"he\"]\r\n\r\nexport const getExpression = (\r\n    key: keyof typeof expressions,\r\n    language: Language\r\n): string => {\r\n    return expressions[key][language]\r\n}\r\n\r\n// @ts-ignore\r\nexport const defaultLanguage: Language =\r\n    process.env[\"REACT_APP_DEFAULT_LANGUAGE\"] || \"en\"\r\n\r\nconst LanguageContext = React.createContext<Language>(defaultLanguage)\r\n\r\nexport default LanguageContext\r\n","import React, { useContext } from \"react\"\r\nimport { useLocalStorage } from \"../../utilities/hooks\"\r\nimport LanguageContext, { getExpression } from \"../../utilities/language\"\r\n\r\ninterface Props {\r\n    store: string\r\n}\r\n\r\nconst Boolean: React.FC<Props> = ({ store }: Props) => {\r\n    const [value, setValue] = useLocalStorage<boolean | null>(store, null)\r\n\r\n    const language = useContext(LanguageContext)\r\n\r\n    return (\r\n        <button\r\n            className=\"button primary p-1 w-28 dark:bg-gray-700 rounded-xl\"\r\n            onClick={() => setValue(value === null ? false : !value)}\r\n        >\r\n            {value === null ? getExpression(\"maybe\", language) : value ? getExpression(\"yes\", language) : getExpression(\"no\", language)}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Boolean\r\n","import React from \"react\"\r\nimport { useLocalStorage } from \"../../utilities/hooks\"\r\n\r\ninterface Props {\r\n    store: string\r\n    min?: number\r\n    max?: number\r\n}\r\n\r\nconst Counter: React.FC<Props> = ({ store, min, max }: Props) => {\r\n    const [value, setValue] = useLocalStorage(store, min ?? 0)\r\n\r\n    const increment = () => {\r\n        if (value === max) return\r\n        setValue(value + 1)\r\n    }\r\n\r\n    const decrement = () => {\r\n        if (value === min) return\r\n        setValue(value - 1)\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex justify-center w-28\" dir=\"ltr\">\r\n            <button\r\n                className=\"bg-lighter text-white rounded-l-xl focus:outline-none font-bold text-xl px-2\"\r\n                onClick={decrement}\r\n            >\r\n                &minus;\r\n            </button>\r\n            <button\r\n                className=\"button primary p-1 flex-grow dark:bg-gray-700\"\r\n                onDoubleClick={() => setValue(min ?? 0)}\r\n            >\r\n                {value}\r\n            </button>\r\n            <button\r\n                className=\"bg-lighter text-white rounded-r-xl focus:outline-none font-bold text-xl px-2\"\r\n                onClick={increment}\r\n            >\r\n                +\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Counter\r\n","import React, { useState } from \"react\"\r\nimport { useLocalStorage } from \"../../utilities/hooks\"\r\n\r\ninterface Props {\r\n    store: string\r\n}\r\n\r\nconst Timer: React.FC<Props> = ({ store }: Props) => {\r\n    const [value, setValue] = useLocalStorage(store, 0)\r\n    const [interval, setInterval] = useState(-1)\r\n\r\n    const format = (x: number): string => {\r\n        let result = value.toFixed(2)\r\n        if (value < 10) {\r\n            result = \"0\" + result\r\n        }\r\n        return result\r\n    }\r\n\r\n    const startStopTimer = () => {\r\n        const start = Date.now()\r\n\r\n        if (interval === -1) {\r\n            const initial = value\r\n            setInterval(\r\n                window.setInterval(() => {\r\n                    const now = Date.now()\r\n                    setValue((now - start) / 1000 + initial)\r\n                }, 10)\r\n            )\r\n        } else {\r\n            window.clearInterval(interval)\r\n            setInterval(-1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"button primary p-1 w-28 dark:bg-gray-700 rounded-xl\"\r\n            onClick={startStopTimer}\r\n            onDoubleClick={() => setValue(0)}\r\n        >\r\n            {format(value)}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Timer\r\n","import React from \"react\"\r\n\r\ninterface Props {\r\n    type?: string\r\n    placeholder?: string\r\n    value: string\r\n    setValue: (s: string) => void\r\n}\r\n\r\nconst Text: React.FC<Props> = ({\r\n    value,\r\n    setValue,\r\n    type,\r\n    placeholder,\r\n}: Props) => {\r\n    return (\r\n        <input\r\n            className=\"w-full dark:bg-gray-600 dark:text-white focus:outline-none p-2 my-2 rounded-xl\"\r\n            type={type}\r\n            placeholder={placeholder}\r\n            value={value}\r\n            onChange={(e) => setValue!(e.target.value)}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Text\r\n","import React from \"react\"\r\nimport { useLocalStorage } from \"../../utilities/hooks\"\r\nimport Text from \"./Text\"\r\n\r\ninterface Props {\r\n    type?: string\r\n    placeholder?: string\r\n    store: string\r\n}\r\n\r\nconst KeyText: React.FC<Props> = ({ store, type, placeholder }: Props) => {\r\n    const [value, setValue] = useLocalStorage(store, \"\")\r\n\r\n    return (\r\n        <Text\r\n            type={type}\r\n            placeholder={placeholder}\r\n            value={value}\r\n            setValue={setValue}\r\n        />\r\n    )\r\n}\r\n\r\nexport default KeyText\r\n","import React from \"react\"\r\nimport { Parameter } from \"./Form\"\r\nimport Boolean from \"./inputs/Boolean\"\r\nimport Counter from \"./inputs/Counter\"\r\nimport Timer from \"./inputs/Timer\"\r\nimport KeyText from \"./inputs/KeyText\"\r\n\r\ninterface Props {\r\n    prefix: string\r\n    widgets: Parameter[]\r\n}\r\n\r\nconst CardWidgets: React.FC<Props> = ({ widgets, prefix }: Props) => {\r\n    return (\r\n        <div>\r\n            {widgets.map((element) => {\r\n                const key = prefix + \" \" + element.key\r\n\r\n                return (\r\n                    <div\r\n                        className=\"w-100 flex flex-row items-center my-2\"\r\n                        key={key}\r\n                        dir=\"auto\"\r\n                    >\r\n                        <p className=\"inline mx-2\">{element.label}</p>\r\n                        <div className=\"flex-grow\" />\r\n                        <div className=\"w-40 flex justify-center\">\r\n                            {element.widget === \"Boolean\" && (\r\n                                <Boolean store={key} />\r\n                            )}\r\n                            {element.widget === \"Counter\" && (\r\n                                <Counter\r\n                                    store={key}\r\n                                    min={element.min ?? 0}\r\n                                    max={element.max}\r\n                                />\r\n                            )}\r\n                            {element.widget === \"Timer\" && (\r\n                                <Timer store={key} />\r\n                            )}\r\n                            {element.widget === \"String\" && (\r\n                                <KeyText store={key} />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardWidgets\r\n","import React, { useContext } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport LanguageContext, { getExpression } from \"../utilities/language\"\r\nimport Card from \"./Card\"\r\n\r\nconst GameCard: React.FC = () => {\r\n    const history = useHistory()\r\n\r\n    const language = useContext(LanguageContext)\r\n\r\n    return (\r\n        <Card title={getExpression(\"games\", language)}>\r\n            <div className=\"flex flex-col mx-auto items-center\">\r\n                <button\r\n                    className=\"button primary p-2 my-1 w-28 rounded-xl\"\r\n                    onClick={() => history.push(\"/games/snake\")}\r\n                >\r\n                    Snake\r\n                </button>\r\n                <button\r\n                    className=\"button primary p-2 my-1 w-28 rounded-xl\"\r\n                    onClick={() => history.push(\"/games/simon\")}\r\n                >\r\n                    Simon\r\n                </button>\r\n                <button\r\n                    className=\"button primary p-2 my-1 w-28 rounded-xl\"\r\n                    onClick={() => history.push(\"/games/leaderboards\")}\r\n                >\r\n                    {getExpression(\"leaderboards\", language)}\r\n                </button>\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default GameCard\r\n","export const QUARTERFINALS_ORDER = [\r\n    \"qf1m1\",\r\n    \"qf2m1\",\r\n    \"qf3m1\",\r\n    \"qf4m1\",\r\n    \"qf1m2\",\r\n    \"qf2m2\",\r\n    \"qf3m2\",\r\n    \"qf4m2\",\r\n    \"qf1m3\",\r\n    \"qf2m3\",\r\n    \"qf3m3\",\r\n    \"qf4m3\",\r\n]\r\n\r\nexport const SEMIFINALS_ORDER = [\r\n    \"sf1m1\",\r\n    \"sf2m1\",\r\n    \"sf1m2\",\r\n    \"sf2m2\",\r\n    \"sf1m3\",\r\n    \"sf2m3\",\r\n]\r\n\r\nexport const FINALS_ORDER = [\"f1m1\", \"f1m2\", \"f1m3\"]\r\n\r\nexport const VERSION = \"1.0.0\"\r\n","import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/firestore\"\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n        apiKey: process.env.REACT_APP_API_KEY,\r\n        authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n        projectId: process.env.REACT_APP_PROJECT_ID,\r\n        storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n        messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n        appId: process.env.REACT_APP_APP_ID,\r\n    })\r\n} else firebase.app()\r\n\r\nexport default firebase\r\n","import React, { useEffect, useState } from \"react\"\r\n\r\nenum Colors {\r\n    Yellow = \"yellow\",\r\n    Blue = \"blue\",\r\n    Red = \"red\",\r\n    Green = \"green\",\r\n}\r\n\r\nconst Simon: React.FC = () => {\r\n    // null if between selections\r\n    const [selected, setSelected] = useState<Colors | undefined | null>()\r\n    const [sequence, setSequence] = useState<Colors[]>([])\r\n    const [index, setIndex] = useState(0) // TODO: this is not needed as state\r\n    const [score, setScore] = useState(0)\r\n\r\n    const showSequence = async () => {\r\n        for (const color of sequence) {\r\n            setSelected(color)\r\n            await new Promise((resolve) => setTimeout(resolve, 600))\r\n            setSelected(null)\r\n            await new Promise((resolve) => setTimeout(resolve, 200))\r\n        }\r\n\r\n        setSelected(undefined)\r\n    }\r\n\r\n    useEffect(() => {\r\n        showSequence()\r\n    }, [sequence])\r\n\r\n    const expandSequence = () => {\r\n        const colorIndex = Math.floor(Math.random() * 4)\r\n        const newColor =\r\n            colorIndex === 0\r\n                ? Colors.Blue\r\n                : colorIndex === 1\r\n                ? Colors.Green\r\n                : colorIndex === 2\r\n                ? Colors.Red\r\n                : Colors.Yellow\r\n        setSequence((s) => [...s, newColor])\r\n    }\r\n\r\n    useEffect(() => {\r\n        new Promise((resolve) => setTimeout(resolve, 1000)).then(() =>\r\n            expandSequence()\r\n        )\r\n    }, [])\r\n\r\n    const onButtonClick = async (color: Colors) => {\r\n        if (color === sequence[index])\r\n            if (index + 1 < sequence.length) setIndex((i) => i + 1)\r\n            else {\r\n                setScore((s) => s + 1)\r\n                setSelected(null)\r\n                await new Promise((resolve) => setTimeout(resolve, 1000))\r\n                expandSequence()\r\n            }\r\n        else {\r\n            setScore(0)\r\n            setSequence([])\r\n        }\r\n    }\r\n\r\n    const getButton = (color: Colors) => {\r\n        const classes =\r\n            color === selected\r\n                ? `bg-${color}-500`\r\n                : selected === undefined\r\n                ? `bg-${color}-300 hover:bg-${color}-500 dark:bg-${color}-700`\r\n                : `bg-${color}-300 dark:bg-${color}-700`\r\n\r\n        return (\r\n            <button\r\n                className={\r\n                    \"button p-1 h-8 w-20 inline-block mr-4 rounded-xl text-transparent \" +\r\n                    classes\r\n                }\r\n                onClick={() => onButtonClick(color)}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <h1 className=\"text-2xl font-bold\">Simon</h1>\r\n            <h3 className=\"text-xl\">Score: {score}</h3>\r\n            <div className=\"w-full flex justify-center items-center my-2\">\r\n                {getButton(Colors.Yellow)}\r\n                {getButton(Colors.Blue)}\r\n            </div>\r\n            <div className=\"w-full flex justify-center items-center my-2\">\r\n                {getButton(Colors.Red)}\r\n                {getButton(Colors.Green)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Simon\r\n","import React, { useContext, useState } from \"react\"\r\nimport Text from \"./inputs/Text\"\r\nimport Card from \"./Card\"\r\nimport axios from \"axios\"\r\nimport { useLocalStorage } from \"../utilities/hooks\"\r\nimport {\r\n    FINALS_ORDER,\r\n    QUARTERFINALS_ORDER,\r\n    SEMIFINALS_ORDER,\r\n} from \"../utilities/constants\"\r\nimport firebase from \"../utilities/firebase\"\r\nimport { Schema } from \"./Form\"\r\nimport LanguageContext, { getExpression } from \"../utilities/language\"\r\n\r\ninterface Props {\r\n    setSchema: (value: Schema) => void\r\n}\r\n\r\nconst InfoCard: React.FC<Props> = ({ setSchema }: Props) => {\r\n    const [game, setGame] = useLocalStorage(\"Game Number\", 0)\r\n    const [team, setTeam] = useLocalStorage(\"Team Number\", 0)\r\n    const [event, setEvent] = useLocalStorage(\"Event Code\", \"\")\r\n    const [level, setLevel] = useLocalStorage(\"Competition Level\", \"qm\")\r\n    const [teams, setTeams] = useState<number[]>([])\r\n\r\n    const language = useContext(LanguageContext)\r\n\r\n    const fetchTeams = async () => {\r\n        setTeams([])\r\n\r\n        if (\r\n            event === \"\" ||\r\n            game === 0 ||\r\n            level === \"\" ||\r\n            event === null ||\r\n            game === null ||\r\n            level === null\r\n        )\r\n            return\r\n\r\n        let code = event + \"_\"\r\n\r\n        switch (level) {\r\n            case \"pm\":\r\n            case \"qm\":\r\n                code += level + game\r\n                break\r\n            case \"qf\":\r\n                code += QUARTERFINALS_ORDER[Number(game) - 1]\r\n                break\r\n            case \"sf\":\r\n                code += SEMIFINALS_ORDER[Number(game) - 1]\r\n                break\r\n            case \"f\":\r\n                code += FINALS_ORDER[Number(game) - 1]\r\n                break\r\n        }\r\n        code = code.replaceAll('\"', \"\")\r\n\r\n        try {\r\n            const response = await axios.get(\r\n                \"https://www.thebluealliance.com/api/v3/match/\" + code,\r\n                {\r\n                    headers: {\r\n                        \"X-TBA-Auth-Key\": process.env.REACT_APP_TBA_AUTH_KEY,\r\n                    },\r\n                }\r\n            )\r\n\r\n            setTeams([\r\n                ...response.data.alliances.red.team_keys.map((key: string) =>\r\n                    Number(key.substring(3))\r\n                ),\r\n                ...response.data.alliances.blue.team_keys.map((key: string) =>\r\n                    Number(key.substring(3))\r\n                ),\r\n            ])\r\n        } catch (e) {\r\n            window.alert(e)\r\n        }\r\n    }\r\n\r\n    const update = () => {\r\n        const user = firebase.auth().currentUser\r\n        if (user !== null) {\r\n            firebase\r\n                .firestore()\r\n                .doc(\"/admin/schema\")\r\n                .get()\r\n                .then((result) => {\r\n                    const data = result.data()\r\n                    if (data !== undefined) {\r\n                        // @ts-ignore\r\n                        setSchema(data)\r\n                    }\r\n                })\r\n        }\r\n\r\n        window.caches.open(\"Scouting\").then((cache) => {\r\n            cache.keys().then((keys) => {\r\n                keys.forEach((key) => cache.delete(key))\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Card title={getExpression(\"info\", language)}>\r\n            <div className=\"flex flex-col mx-auto items-center\">\r\n                <button\r\n                    className=\"button rounded-xl primary p-2 my-1 w-60\"\r\n                    onClick={update}\r\n                >\r\n                    {getExpression(\"update\", language)}\r\n                </button>\r\n            </div>\r\n            <Text\r\n                value={event}\r\n                setValue={setEvent}\r\n                placeholder={getExpression(\"eventCode\", language)}\r\n            />\r\n            <select\r\n                className=\"w-full dark:bg-gray-600 dark:text-white focus:outline-none p-2 my-2 rounded-xl appearance-none\"\r\n                dir=\"ltr\"\r\n                onChange={(e) => setLevel(e.target.value)}\r\n                value={level}\r\n            >\r\n                <option value=\"pm\">Practice</option>\r\n                <option value=\"qm\">Qualifications</option>\r\n                <option value=\"qf\">Quarterfinals</option>\r\n                <option value=\"sf\">Semifinals</option>\r\n                <option value=\"f\">Finals</option>\r\n            </select>\r\n            <Text\r\n                //@ts-ignore\r\n                value={game === 0 ? \"\" : game.toString()}\r\n                setValue={(s: string) => setGame(Number(s))}\r\n                type=\"number\"\r\n                placeholder={getExpression(\"gameNumber\", language)}\r\n            />\r\n            {teams.length !== 0 && (\r\n                <>\r\n                    <div\r\n                        className=\"flex justify-center dark:text-white\"\r\n                        dir=\"ltr\"\r\n                    >\r\n                        <button\r\n                            className=\"button py-2 px-5 my-1 mx-3 bg-red-300 dark:bg-red-700 rounded-xl\"\r\n                            onClick={() => setTeam(teams[0])}\r\n                        >\r\n                            {teams[0]}\r\n                        </button>\r\n                        <button\r\n                            className=\"button py-2 px-5 my-1 mx-3 bg-red-300 dark:bg-red-700 rounded-xl\"\r\n                            onClick={() => setTeam(teams[1])}\r\n                        >\r\n                            {teams[1]}\r\n                        </button>\r\n                        <button\r\n                            className=\"button py-2 px-5 my-1 mx-3 bg-red-300 dark:bg-red-700 rounded-xl\"\r\n                            onClick={() => setTeam(teams[2])}\r\n                        >\r\n                            {teams[2]}\r\n                        </button>\r\n                    </div>\r\n                    <div\r\n                        className=\"flex justify-center dark:text-white\"\r\n                        dir=\"ltr\"\r\n                    >\r\n                        <button\r\n                            className=\"button py-2 px-5 my-1 mx-3 bg-blue-300 dark:bg-blue-700 rounded-xl\"\r\n                            onClick={() => setTeam(teams[3])}\r\n                        >\r\n                            {teams[3]}\r\n                        </button>\r\n                        <button\r\n                            className=\"button py-2 px-5 my-1 mx-3 bg-blue-300 dark:bg-blue-700 rounded-xl\"\r\n                            onClick={() => setTeam(teams[4])}\r\n                        >\r\n                            {teams[4]}\r\n                        </button>\r\n                        <button\r\n                            className=\"button py-2 px-5 my-1 mx-3 bg-blue-300 dark:bg-blue-700 rounded-xl\"\r\n                            onClick={() => setTeam(teams[5])}\r\n                        >\r\n                            {teams[5]}\r\n                        </button>\r\n                    </div>\r\n                </>\r\n            )}\r\n            <Text\r\n                value={team === 0 ? \"\" : team.toString()}\r\n                setValue={(s: string) => {\r\n                    setTeam(Number(s))\r\n                }}\r\n                placeholder={getExpression(\"teamNumber\", language)}\r\n            />\r\n            <div className=\"flex flex-col mx-auto items-center\">\r\n                <button\r\n                    className=\"button primary p-2 my-1 w-60 rounded-xl\"\r\n                    onClick={fetchTeams}\r\n                >\r\n                    {getExpression(\"fetchTeamsFromTBA\", language)}\r\n                </button>\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default InfoCard\r\n","import React, { useContext, useEffect, useState } from \"react\"\r\nimport Card from \"./Card\"\r\nimport { Schema } from \"./Form\"\r\nimport firebase from \"../utilities/firebase\"\r\nimport LanguageContext, { getExpression, Language } from \"../utilities/language\"\r\n\r\ninterface Props {\r\n    schema: Schema\r\n}\r\n\r\nconst getMissing = (schema: Schema, language: Language): string => {\r\n    if (schema.sections === undefined) return \"\"\r\n    for (const card of schema.sections) {\r\n        for (const widget of card.widgets) {\r\n            const item = localStorage.getItem(card.prefix + \" \" + widget.key)\r\n            if (item === null || item === \"null\")\r\n                return (\r\n                    widget.key +\r\n                    \" \" +\r\n                    getExpression(\"in\", language) +\r\n                    card.title\r\n                )\r\n        }\r\n    }\r\n\r\n    return \"\"\r\n}\r\n\r\nconst SubmissionCard: React.FC<Props> = ({ schema }: Props) => {\r\n    const language = useContext(LanguageContext)\r\n\r\n    const [missing, setMissing] = useState(getMissing(schema, language))\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"storage\", () =>\r\n            setMissing(getMissing(schema, language))\r\n        )\r\n        window.addEventListener(\"local-storage\", () =>\r\n            setMissing(getMissing(schema, language))\r\n        )\r\n\r\n        setMissing(getMissing(schema, language))\r\n    }, [schema, language])\r\n\r\n    const createSubmission = () => {\r\n        const submission: any = {\r\n            General: {\r\n                Game: JSON.parse(localStorage.getItem(\"Game Number\")!),\r\n                Level: localStorage\r\n                    .getItem(\"Competition Level\")!\r\n                    .replaceAll('\"', \"\"),\r\n                Team: JSON.parse(localStorage.getItem(\"Team Number\")!),\r\n                Scouter: firebase.auth().currentUser?.displayName,\r\n            },\r\n            Event: localStorage.getItem(\"Event Code\")!.replaceAll('\"', \"\"),\r\n        }\r\n\r\n        if (schema.sections !== undefined)\r\n            for (const card of schema.sections) {\r\n                submission[card.prefix] = {}\r\n                for (const widget of card.widgets) {\r\n                    const item = localStorage.getItem(\r\n                        card.prefix + \" \" + widget.key\r\n                    )\r\n                    submission[card.prefix][widget.key] = JSON.parse(item!)\r\n                }\r\n            }\r\n\r\n        return submission\r\n    }\r\n\r\n    const send = () => {\r\n        const submission = createSubmission()\r\n\r\n        firebase\r\n            .firestore()\r\n            .collection(\"data\")\r\n            .where(\"General.Game\", \"==\", submission.General.Game)\r\n            .where(\"General.Level\", \"==\", submission.General.Level)\r\n            .where(\"General.Team\", \"==\", submission.General.Team)\r\n            .where(\"Event\", \"==\", submission.Event)\r\n            .get()\r\n            .then((result) => {\r\n                if (result.empty)\r\n                    firebase\r\n                        .firestore()\r\n                        .collection(\"data\")\r\n                        .add(submission)\r\n                        .then(() => window.alert(\"Submission Received\"))\r\n                        .catch((e) => window.alert(e))\r\n                else\r\n                    result.docs[0].ref\r\n                        .set(submission)\r\n                        .then(() => window.alert(\"Submission Updated\"))\r\n                        .catch((e) => window.alert(e))\r\n            })\r\n    }\r\n\r\n    const reset = () => {\r\n        if (schema.sections !== undefined)\r\n            schema.sections.forEach((card) => {\r\n                card.widgets.forEach((widget) => {\r\n                    localStorage.removeItem(card.prefix + \" \" + widget.key)\r\n                })\r\n            })\r\n\r\n        window.dispatchEvent(new Event(\"local-storage\"))\r\n    }\r\n\r\n    const copy = () => {\r\n        navigator.clipboard.writeText(\r\n            JSON.stringify(createSubmission(), null, 4)\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Card title={getExpression(\"submission\", language)}>\r\n            <div className=\"flex flex-col mx-auto items-center\">\r\n                {missing !== \"\" && (\r\n                    <p className=\"text-center\">\r\n                        {getExpression(\"missing\", language)} {missing}\r\n                    </p>\r\n                )}\r\n                {missing === \"\" && (\r\n                    <button\r\n                        className=\"button primary p-2 m-1 w-28 rounded-xl\"\r\n                        onClick={send}\r\n                    >\r\n                        {getExpression(\"submit\", language)}\r\n                    </button>\r\n                )}\r\n                <button\r\n                    className=\"button primary p-2 m-1 w-28 rounded-xl\"\r\n                    onClick={reset}\r\n                >\r\n                    {getExpression(\"reset\", language)}\r\n                </button>\r\n                <button\r\n                    className=\"button primary p-2 m-1 w-28 rounded-xl\"\r\n                    onClick={copy}\r\n                >\r\n                    {getExpression(\"copy\", language)}\r\n                </button>\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default SubmissionCard\r\n","import React from \"react\"\r\nimport Card from \"./Card\"\r\nimport CardWidgets from \"./CardWidgets\"\r\nimport GameCard from \"./GameCard\"\r\nimport InfoCard from \"./InfoCard\"\r\nimport SubmissionCard from \"./SubmissionCard\"\r\n\r\nexport interface Parameter {\r\n    key: string\r\n    widget: \"Counter\" | \"Timer\" | \"Boolean\" | \"String\"\r\n    label: string\r\n    min?: number\r\n    max?: number\r\n}\r\n\r\ninterface CardSchema {\r\n    title: string\r\n    prefix: string\r\n    widgets: Parameter[]\r\n}\r\n\r\nexport interface Schema {\r\n    sections?: CardSchema[]\r\n}\r\n\r\ninterface Props {\r\n    schema: Schema\r\n    setSchema: (value: Schema) => void\r\n}\r\n\r\nconst Form: React.FC<Props> = ({ schema, setSchema }: Props) => {\r\n    return (\r\n        <div className=\"w-full flex flex-col justify-center items-center\">\r\n            <InfoCard setSchema={setSchema} />\r\n            {schema.sections &&\r\n                schema.sections.map((card) => {\r\n                    return (\r\n                        <Card\r\n                            title={card.title ?? \"Untitled\"}\r\n                            key={card.title + \" Card\"}\r\n                        >\r\n                            <CardWidgets\r\n                                prefix={card.prefix}\r\n                                widgets={card.widgets}\r\n                            />\r\n                        </Card>\r\n                    )\r\n                })}\r\n            <SubmissionCard schema={schema} />\r\n            <GameCard />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React, { useEffect, useState } from \"react\"\r\nimport Card from \"../Card\"\r\nimport firebase from \"../../utilities/firebase\"\r\n\r\nconst Leaderboards: React.FC = () => {\r\n    const [snake, setSnake] = useState<any[]>([])\r\n\r\n    useEffect(() => {\r\n        firebase\r\n            .firestore()\r\n            .collection(\"/games\")\r\n            .orderBy(\"snake\", \"desc\")\r\n            .get()\r\n            .then((result) => {\r\n                const newSnake: any[] = []\r\n                result.docs.forEach((userScores) => {\r\n                    newSnake.push([userScores.id, userScores.data().snake])\r\n                })\r\n                setSnake(newSnake)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"flex flex-col justify-center items-center\">\r\n            <h1 className=\"text-center text-2xl font-bold\">Leaderboards</h1>\r\n            <Card title=\"Snake\">\r\n                <table className=\"w-full text-center\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Score</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {snake.map((result) => {\r\n                            return (\r\n                                <tr key={result[0]}>\r\n                                    <td>{result[0]}</td>\r\n                                    <td>{result[1]}</td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Leaderboards\r\n","import firebase from \"../../utilities/firebase\"\r\n\r\nexport enum Piece {\r\n    Background,\r\n    Food,\r\n    Head,\r\n    Body,\r\n}\r\n\r\nexport enum Direction {\r\n    Right = 1,\r\n    Left = -1,\r\n    Up = 2,\r\n    Down = -2,\r\n}\r\n\r\nexport const moveInDirection = (position: number[], direction: Direction) => {\r\n    switch (direction) {\r\n        case Direction.Up:\r\n            return [position[0] - 1, position[1]]\r\n        case Direction.Left:\r\n            return [position[0], position[1] - 1]\r\n        case Direction.Right:\r\n            return [position[0], position[1] + 1]\r\n        case Direction.Down:\r\n            return [position[0] + 1, position[1]]\r\n    }\r\n}\r\n\r\nconst INITIAL_BOARD = [\r\n    [\r\n        Piece.Body,\r\n        Piece.Body,\r\n        Piece.Head,\r\n        Piece.Background,\r\n        Piece.Food,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n    ],\r\n    [\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n    ],\r\n    [\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n    ],\r\n    [\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n    ],\r\n    [\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n    ],\r\n    [\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n    ],\r\n    [\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n    ],\r\n    [\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n    ],\r\n    [\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n    ],\r\n    [\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n        Piece.Background,\r\n    ],\r\n]\r\n\r\nexport const getInitialBoard = () => INITIAL_BOARD\r\n\r\nexport default class SnakeGame {\r\n    score: number\r\n    board: Piece[][]\r\n    snake: number[][]\r\n    food: number[]\r\n    direction: Direction\r\n    size = 10\r\n    setBoard?: React.Dispatch<React.SetStateAction<Piece[][]>>\r\n    setScore?: React.Dispatch<React.SetStateAction<number>>\r\n\r\n    constructor() {\r\n        this.score = 0\r\n        this.snake = [\r\n            [0, 0],\r\n            [0, 1],\r\n            [0, 2],\r\n        ]\r\n        this.food = [0, 4]\r\n        this.direction = Direction.Right\r\n        this.board = getInitialBoard()\r\n    }\r\n\r\n    getBoard() {\r\n        let result: Piece[][] = []\r\n        for (let i = 0; i < 10; i++) {\r\n            let row = []\r\n            for (let j = 0; j < 10; j++) {\r\n                row.push(Piece.Background)\r\n            }\r\n            result.push(row)\r\n        }\r\n\r\n        for (let i = 0; i < this.snake.length - 1; i++) {\r\n            result[this.snake[i][0]][this.snake[i][1]] = Piece.Body\r\n        }\r\n\r\n        const head = this.snake[this.snake.length - 1]\r\n        result[head[0]][head[1]] = Piece.Head\r\n\r\n        result[this.food[0]][this.food[1]] = Piece.Food\r\n\r\n        return result\r\n    }\r\n\r\n    move() {\r\n        const head = this.snake[this.snake.length - 1]\r\n\r\n        const next = moveInDirection(head, this.direction)\r\n\r\n        if (\r\n            next[0] < 0 ||\r\n            next[1] < 0 ||\r\n            next[0] > 9 ||\r\n            next[1] > 9 ||\r\n            this.board[next[0]][next[1]] === Piece.Body\r\n        ) {\r\n            this.finish()\r\n            return false\r\n        }\r\n\r\n        if (this.board[next[0]][next[1]] === Piece.Food) {\r\n            if (this.setScore !== undefined) {\r\n                this.score++\r\n                this.setScore(this.score)\r\n            }\r\n            this.snake = [...this.snake, next]\r\n            this.moveFoodToNewRandomLocation()\r\n        } else this.snake = [...this.snake.slice(1), next]\r\n\r\n        this.board = this.getBoard()\r\n        if (this.setBoard !== undefined) {\r\n            this.setBoard(this.board)\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    setDirection(direction: Direction) {\r\n        this.direction = direction\r\n    }\r\n\r\n    setCallbacks(\r\n        setBoard: React.Dispatch<React.SetStateAction<Piece[][]>>,\r\n        setScore: React.Dispatch<React.SetStateAction<number>>\r\n    ) {\r\n        this.setBoard = setBoard\r\n        this.setScore = setScore\r\n        this.setScore(0)\r\n        const run = () => {\r\n            if (this.move())\r\n                setTimeout(run, Math.max(1000 - this.score * 50, 200))\r\n        }\r\n        run()\r\n    }\r\n\r\n    start() {\r\n        this.setCallbacks(this.setBoard!, this.setScore!)\r\n    }\r\n\r\n    moveFoodToNewRandomLocation() {\r\n        let position = [\r\n            Math.floor(Math.random() * 10),\r\n            Math.floor(Math.random() * 10),\r\n        ]\r\n        while (this.board[position[0]][position[1]] !== Piece.Background) {\r\n            position = [\r\n                Math.floor(Math.random() * 10),\r\n                Math.floor(Math.random() * 10),\r\n            ]\r\n        }\r\n        this.food = position\r\n        this.board = this.getBoard()\r\n        if (this.setBoard !== undefined) this.setBoard(this.board)\r\n    }\r\n\r\n    finish() {\r\n        this.board = []\r\n        if (this.setBoard !== undefined) this.setBoard(this.board)\r\n        const high = window.localStorage.getItem(\"Snake High Score\")\r\n        if (high === null || Number(high) < this.score) {\r\n            window.localStorage.setItem(\r\n                \"Snake High Score\",\r\n                this.score.toString()\r\n            )\r\n            const document = firebase\r\n                .firestore()\r\n                .doc(\"/games/\" + firebase.auth().currentUser!.displayName)\r\n            document.get().then((result) => {\r\n                if (this.score > Number(result.data()?.snake ?? \"0\"))\r\n                    document.set(\r\n                        {\r\n                            snake: this.score,\r\n                        },\r\n                        { merge: true }\r\n                    )\r\n            })\r\n        }\r\n        return false\r\n    }\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport SnakeGame, { Direction, getInitialBoard, Piece } from \"./SnakeGame\"\r\n\r\nlet game = new SnakeGame()\r\n\r\nconst Snake: React.FC = () => {\r\n    const [board, setBoard] = useState<Piece[][]>(getInitialBoard)\r\n    const [score, setScore] = useState(0)\r\n    const [direction, setDirection] = useState(Direction.Right)\r\n\r\n    useEffect(() => {\r\n        game.setCallbacks(setBoard, setScore)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        game.setDirection(direction)\r\n    }, [direction])\r\n\r\n    const start = () => {\r\n        setDirection(Direction.Right)\r\n        game = new SnakeGame()\r\n        game.setCallbacks(setBoard, setScore)\r\n    }\r\n\r\n    const rotation =\r\n        direction === Direction.Up\r\n            ? 0\r\n            : direction === Direction.Right\r\n                ? 90\r\n                : direction === Direction.Left\r\n                    ? 270\r\n                    : 180\r\n\r\n    const attemptToSetDirection = (d: Direction) => {\r\n        if (d !== -direction) setDirection(d)\r\n    }\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <h1 className=\"text-2xl font-bold\">Snake</h1>\r\n            <h3 className=\"text-xl\">Score: {score}</h3>\r\n            {board.length === 0 && (\r\n                <>\r\n                    <button\r\n                        className=\"text-center button primary p-1 my-2 w-20 rounded-xl\"\r\n                        onClick={start}\r\n                    >\r\n                        Start\r\n                    </button>\r\n                    <h3>\r\n                        High Score:{\" \"}\r\n                        {Math.max(\r\n                            Number(\r\n                                window.localStorage.getItem(\r\n                                    \"Snake High Score\"\r\n                                ) ?? \"0\"\r\n                            ),\r\n                            score\r\n                        )}\r\n                    </h3>\r\n                </>\r\n            )}\r\n            {board.map((row, r) => {\r\n                return (\r\n                    <div\r\n                        className=\"w-full flex items-center justify-center\"\r\n                        key={`Snake Row ${r}`}\r\n                    >\r\n                        {row.map((piece, c) => {\r\n                            if (piece === Piece.Background) {\r\n                                return (\r\n                                    <div\r\n                                        className=\"inline-block w-10 h-10 bg-gray-200 dark:bg-gray-900\"\r\n                                        key={`Snake Row ${r} Column ${c}`}\r\n                                    />\r\n                                )\r\n                            }\r\n                            if (piece === Piece.Food) {\r\n                                return (\r\n                                    <div\r\n                                        className=\"w-10 h-10 flex items-center justify-center bg-red-600\"\r\n                                        key={`Snake Row ${r} Column ${c}`}\r\n                                    >\r\n                                        <img\r\n                                            src=\"/food.png\"\r\n                                            alt=\"head\"\r\n                                            className=\"w-full h-full\"\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            if (piece === Piece.Head) {\r\n                                return (\r\n                                    <div\r\n                                        className=\"w-10 h-10 flex items-center justify-center bg-primary\"\r\n                                        key={`Snake Row ${r} Column ${c}`}\r\n                                    >\r\n                                        <img\r\n                                            src=\"/icon.png\"\r\n                                            height={30}\r\n                                            width={30}\r\n                                            alt=\"head\"\r\n                                            className=\"transition duration-100\"\r\n                                            style={{\r\n                                                transform: `rotate(${rotation}deg)`,\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            return (\r\n                                <div\r\n                                    className=\"inline-block w-10 h-10 bg-primary\"\r\n                                    key={`Snake Row ${r} Column ${c}`}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                )\r\n            })}\r\n            <div className=\"w-full flex flex-col justify-center items-center mt-5\">\r\n                <button\r\n                    className=\"button primary p-1 w-20 rounded-xl\"\r\n                    onClick={() => setDirection(Direction.Up)}\r\n                >\r\n                    &uarr;\r\n                </button>\r\n                <div className=\"w-full flex justify-center items-center my-2\">\r\n                    <button\r\n                        className=\"button primary p-1 w-20 inline-block mr-4 rounded-xl\"\r\n                        onClick={() => attemptToSetDirection(Direction.Left)}\r\n                    >\r\n                        &larr;\r\n                    </button>\r\n                    <button\r\n                        className=\"button primary p-1 w-20 inline-block rounded-xl\"\r\n                        onClick={() => attemptToSetDirection(Direction.Right)}\r\n                    >\r\n                        &rarr;\r\n                    </button>\r\n                </div>\r\n                <button\r\n                    className=\"button primary p-1 w-20 rounded-xl\"\r\n                    onClick={() => attemptToSetDirection(Direction.Down)}\r\n                >\r\n                    &darr;\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Snake\r\n","import React from \"react\"\r\nimport firebase from \"../utilities/firebase\"\r\n\r\ninterface Props {\r\n    photoURL?: string | null\r\n    className?: string\r\n}\r\n\r\nconst ProfilePicture: React.FC<Props> = ({ photoURL, className }: Props) => {\r\n    if (photoURL === undefined || photoURL === null) return <div />\r\n\r\n    const signOut = () => {\r\n        if (window.confirm(\"Are you sure you want to sign out?\"))\r\n            firebase.auth().signOut()\r\n    }\r\n\r\n    return (\r\n        <button onClick={signOut} className=\"focus:outline-none\">\r\n            <img\r\n                src={photoURL}\r\n                alt=\"profile\"\r\n                height={40}\r\n                width={40}\r\n                className={\r\n                    \"rounded-full\" +\r\n                    (className === undefined ? \"\" : \" \" + className)\r\n                }\r\n            />\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ProfilePicture\r\n","import React, { useContext, useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport LanguageContext, {\r\n    flags,\r\n    Language,\r\n    languages,\r\n} from \"../utilities/language\"\r\nimport ProfilePicture from \"./ProfilePicture\"\r\n\r\ninterface Props {\r\n    photoURL?: string | null\r\n    setLanguage: (language: Language) => void\r\n}\r\n\r\nconst TopBar: React.FC<Props> = ({ photoURL, setLanguage }: Props) => {\r\n    const [rotation, setRotation] = useState(0)\r\n    const language = useContext(LanguageContext)\r\n\r\n    return (\r\n        <div className=\"h-16 flex-none bg-primary flex items-center\">\r\n            <img\r\n                className=\"ml-2 transition duration-300\"\r\n                src=\"/icon.png\"\r\n                height={40}\r\n                width={40}\r\n                alt=\"icon\"\r\n                onClick={() => setRotation((r) => r + 72)}\r\n                style={{ transform: `rotate(${rotation}deg)` }}\r\n            />\r\n            <Link to=\"/\">\r\n                <h1 className=\"ml-3 font-bold text-white text-xl\">Scouting</h1>\r\n            </Link>\r\n            <div className=\"flex-grow\" />\r\n            <button\r\n                className=\"mr-2 text-3xl focus:outline-none\"\r\n                onClick={() =>\r\n                    setLanguage(\r\n                        languages[\r\n                            (languages.indexOf(language) + 1) % languages.length\r\n                        ]\r\n                    )\r\n                }\r\n            >\r\n                {flags[language]}\r\n            </button>\r\n            <ProfilePicture photoURL={photoURL} className=\"mr-3\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopBar\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\r\nimport Form, { Schema } from \"./components/Form\"\r\nimport Leaderboards from \"./components/games/Leaderboards\"\r\nimport Simon from \"./components/games/Simon\"\r\nimport Snake from \"./components/games/Snake\"\r\nimport TopBar from \"./components/TopBar\"\r\nimport { VERSION } from \"./utilities/constants\"\r\nimport firebase from \"./utilities/firebase\"\r\nimport { useLocalStorage } from \"./utilities/hooks\"\r\nimport LanguageContext, {\r\n    defaultLanguage,\r\n    Language,\r\n} from \"./utilities/language\"\r\n\r\nconst App: React.FC = () => {\r\n    const [user, setUser] = useState<firebase.User | null>(null)\r\n    const [language, setLanguage] = useLocalStorage<Language>(\r\n        \"Language\",\r\n        defaultLanguage\r\n    )\r\n    const [schema, setSchema] = useLocalStorage<Schema>(\"Schema\", {})\r\n\r\n    firebase.auth().onAuthStateChanged((user) => setUser(user))\r\n\r\n    const signIn = () => {\r\n        const provider = new firebase.auth.GoogleAuthProvider()\r\n        firebase.auth().signInWithPopup(provider)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const checkVersion = () => {\r\n            firebase\r\n                .firestore()\r\n                .doc(\"/admin/version\")\r\n                .get()\r\n                .then((result) => {\r\n                    localStorage.setItem(\r\n                        \"Last Version Check\",\r\n                        new Date().toISOString()\r\n                    )\r\n                    const latest = result.data()?.version\r\n                    if (latest !== null && latest > VERSION)\r\n                        window.alert(\r\n                            `You're using version ${VERSION} but version ${latest} is available. Please update!`\r\n                        )\r\n                })\r\n                .catch((_) => {})\r\n        }\r\n\r\n        const last = localStorage.getItem(\"Last Version Check\")\r\n        if (last === null) checkVersion()\r\n        // More than a day\r\n        else if (new Date().getSeconds() - new Date(last).getSeconds() > 86400)\r\n            checkVersion()\r\n    }, [])\r\n\r\n    return (\r\n        <Router>\r\n            <LanguageContext.Provider value={language}>\r\n                <div className=\"h-screen flex flex-col overflow-hidden fixed w-full\">\r\n                    <TopBar\r\n                        photoURL={user?.photoURL}\r\n                        setLanguage={setLanguage}\r\n                    />\r\n                    <div className=\"flex-grow flex flex-col bg-white dark:bg-gray-800 dark:text-white p-3 overflow-y-auto\">\r\n                        {user === null && (\r\n                            <div className=\"h-full w-full flex justify-center items-center\">\r\n                                <button\r\n                                    className=\"button primary p-2 m-2 rounded-xl\"\r\n                                    onClick={signIn}\r\n                                >\r\n                                    Sign in with Google\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                        {user !== null && (\r\n                            <Switch>\r\n                                <Route exact path=\"/games/snake\">\r\n                                    <Snake />\r\n                                </Route>\r\n                                <Route exact path=\"/games/simon\">\r\n                                    <Simon />\r\n                                </Route>\r\n                                <Route exact path=\"/games/leaderboards\">\r\n                                    <Leaderboards />\r\n                                </Route>\r\n                                <Route path=\"*\">\r\n                                    <Form\r\n                                        schema={schema}\r\n                                        setSchema={setSchema}\r\n                                    />\r\n                                </Route>\r\n                            </Switch>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </LanguageContext.Provider>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\"\r\nimport App from \"./App\"\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}